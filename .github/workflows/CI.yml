name: CI

on: [pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }} 
    steps:
    - uses: actions/checkout@v1
    #- name: Use .NET Core sdk
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: 3.0.100
    #- name: Restore with dotnet
    #  run: dotnet restore AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.Tests/AzurePipelinesToGitHubActionsConverter.Tests.csproj
    #- name: Build with dotnet
    #  run: dotnet build AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.Tests/AzurePipelinesToGitHubActionsConverter.Tests.csproj --configuration Release
    - name: Test with dotnet
      run: dotnet test AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.Tests/AzurePipelinesToGitHubActionsConverter.Tests.csproj --configuration Release
    #- name: Publish with dotnet
    #  run: dotnet publish AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.ConsoleApp/AzurePipelinesToGitHubActionsConverter.ConsoleApp.csproj --configuration Release
    #- name: test variables
    #  run: echo ${GITHUB_WORKSPACE} 
    #- name: publish build artifacts back to GitHub
    #  uses: actions/upload-artifact@master
    #  with:
    #    name: console exe
    #    path: AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.ConsoleApp/bin/Release/netcoreapp3.0

  NuGetPush:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    #- name: Build with dotnet
    #  run: dotnet build --configuration Release --version-suffix prerelease-$(date +%Y%m%d%H%M%S)
    #  shell: bash
    - name: Pack with dotnet
      run: dotnet pack AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.Core/AzurePipelinesToGitHubActionsConverter.Core.csproj --configuration Release --version-suffix prerelease-$(date +%Y%m%d%H%M%S)
    - name: Publish nuget
      run: |
             curl -vX PUT -u "${{ secrets.GHPackagesUser }}:${{ secrets.GHPackagesToken }}" -F package=/home/runner/work/AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter/AzurePipelinesToGitHubActionsConverter.Core/bin/Release/*.nupkg https://nuget.pkg.github.com/samsmithnz/
      shell: bash
